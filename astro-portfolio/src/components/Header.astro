---
import HeaderLink from "./HeaderLink.astro";
import { SITE_TITLE } from "../consts";
---

<header>
	<nav>
		<h2>
			<a href="/">
				<img src="/TCLogo.png" alt="TC Logo" class="logo" />
			</a>
		</h2>
		<div class="internal-links">
			<HeaderLink href="#home" class="nav-link">Home</HeaderLink>
			<HeaderLink href="#about" class="nav-link">About</HeaderLink>
			<HeaderLink href="#skills" class="nav-link">Skills</HeaderLink>
			<HeaderLink href="#career" class="nav-link">Career</HeaderLink>
			<HeaderLink href="#projects" class="nav-link">Projects</HeaderLink>
			<HeaderLink href="#contact" class="nav-link">Contact</HeaderLink>
		</div>
		<div class="social-links">
			<a href="https://github.com/tristancable" target="_blank">
				<span class="sr-only">Go to Tristan's GitHub repo</span>
				<svg
					viewBox="0 0 16 16"
					aria-hidden="true"
					width="32"
					height="32"
					astro-icon="social/github"
					><path
						fill="currentColor"
						d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z"
					></path></svg
				>
			</a>
			<button id="theme-toggle" aria-label="Toggle Light/Dark Mode">
				üåô
			</button>
		</div>
	</nav>
</header>
<style>
	header {
		position: sticky;
		top: 0;
		z-index: 1000;
		margin: 0;
		padding: 0 1em;
		background: white;
		box-shadow: 0 2px 8px rgba(var(--black), 5%);
		height: 60px; /* Set a fixed height for the navbar */
		overflow: visible; /* Ensure the logo can overflow the navbar if needed */
	}

	h2 {
		margin: 0;
		font-size: 1em;
		position: relative;
	}

	h2 a {
		display: inline-block;
		position: relative; /* Change from absolute to relative */
	}

	h2 a img.logo {
		height: 80px; /* Adjust the size of the logo */
		width: auto;
		display: block; /* Ensure the image is visible */
		margin: -10px 0; /* Allow the logo to visually overflow the navbar */
	}

	nav {
		display: flex;
		align-items: center;
		justify-content: space-between;
		height: 100%; /* Ensure the navbar content stays vertically aligned */
	}

	nav a {
		padding: 0.7em 0.5em;
		color: var(--black);
		border-bottom: 4px solid transparent;
		text-decoration: none;
		position: relative;
	}

	nav a.active {
		text-decoration: none;
		border-bottom-color: var(--accent);
	}

	.social-links,
	.social-links a {
		display: flex;
	}

	@media (max-width: 720px) {
		.social-links {
			display: none;
		}
	}

	html {
		background-color: white;
		color: black;
	}

	html.dark-mode {
		background-color: rgb(67, 67, 67);
		color: white;
		box-shadow: 0 2px 8px rgba(var(--black), 5%);
	}

	html.dark-mode body {
		background: linear-gradient(rgb(55, 55, 55), rgb(67, 67, 67));
		color: white;
	}

	html.dark-mode header {
		background: rgb(50, 50, 50); /* Navbar background in dark mode */
	}

	#theme-toggle {
		background: none;
		border: none;
		cursor: pointer;
		font-size: 1.5em;
		margin-left: 1em;
	}
</style>

<script>
	document.addEventListener("DOMContentLoaded", () => {
		const themeToggleButton = document.getElementById("theme-toggle");
		const htmlElement = document.documentElement;

		// Check for saved theme in localStorage
		const savedTheme = localStorage.getItem("theme");
		if (savedTheme) {
			htmlElement.classList.toggle("dark-mode", savedTheme === "dark");
			if (themeToggleButton) {
				themeToggleButton.textContent =
					savedTheme === "dark" ? "‚òÄÔ∏è" : "üåô";
			}
		}

		// Toggle theme on button click
		if (themeToggleButton) {
			themeToggleButton.addEventListener("click", () => {
				const isDarkMode = htmlElement.classList.toggle("dark-mode");
				console.log("Dark mode enabled:", isDarkMode); // Debug log
				themeToggleButton.textContent = isDarkMode ? "‚òÄÔ∏è" : "üåô";
				localStorage.setItem("theme", isDarkMode ? "dark" : "light");
			});
		}
	});
</script>
